#include "DDUpdateUploadServer.h"

#ifdef USE_HTML_MIN_GZ
#define update_min_htm_gz_len 1739
static const char update_min_htm_gz[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x08, 0x12, 0x7c, 0x3d, 0x5c, 0x04, 0x00, 0x75, 0x70,
  0x64, 0x61, 0x74, 0x65, 0x2e, 0x6d, 0x69, 0x6e, 0x2e, 0x68, 0x74, 0x6d,
  0x00, 0x95, 0x57, 0x59, 0x13, 0x93, 0x30, 0x10, 0xfe, 0x2b, 0x11, 0xc7,
  0x99, 0x76, 0x04, 0xca, 0x51, 0x6a, 0x0b, 0x56, 0xc7, 0x73, 0x74, 0xc6,
  0x6b, 0x46, 0x7d, 0x70, 0x1c, 0x1f, 0x52, 0x58, 0x4a, 0x94, 0x12, 0x1a,
  0x42, 0x6b, 0xad, 0xfd, 0xef, 0xee, 0x42, 0x0f, 0x50, 0xeb, 0xf1, 0x50,
  0x48, 0xc2, 0xee, 0xb7, 0x9b, 0xdd, 0x6f, 0x37, 0xe9, 0xdd, 0x1b, 0x8f,
  0x5f, 0x3f, 0x7a, 0xf7, 0xe1, 0xcd, 0x13, 0x96, 0xe9, 0x55, 0x7e, 0xef,
  0x6e, 0xfb, 0x5c, 0x81, 0xe6, 0xb8, 0xa0, 0x4b, 0x0b, 0xd6, 0xb5, 0xd8,
  0xcc, 0x8d, 0x47, 0xb2, 0xd0, 0x50, 0x68, 0xeb, 0xdd, 0xae, 0x04, 0x83,
  0xc5, 0xed, 0x6c, 0x6e, 0x68, 0xf8, 0xaa, 0x47, 0xa4, 0x12, 0xb1, 0x38,
  0xe3, 0xaa, 0x02, 0x3d, 0xaf, 0x75, 0x6a, 0x4d, 0x8d, 0x23, 0x44, 0xc1,
  0x57, 0x30, 0x37, 0x36, 0x02, 0xb6, 0xa5, 0x54, 0xba, 0xa3, 0xb8, 0x15,
  0x89, 0xce, 0xe6, 0x09, 0x6c, 0x44, 0x0c, 0x56, 0x33, 0x31, 0x45, 0x21,
  0xb4, 0xe0, 0xb9, 0x55, 0xc5, 0x3c, 0x87, 0xb9, 0x63, 0x07, 0x08, 0x92,
  0x01, 0x4f, 0xee, 0xdd, 0xad, 0xf4, 0x2e, 0x87, 0x7b, 0x37, 0x53, 0x91,
  0xc3, 0x0b, 0xbe, 0x80, 0xfc, 0x1d, 0x5a, 0x35, 0x6f, 0xd6, 0x65, 0x2e,
  0x79, 0xf2, 0x56, 0x73, 0x5d, 0x57, 0xfb, 0x14, 0x81, 0xad, 0x94, 0xaf,
  0x44, 0xbe, 0x0b, 0x1f, 0x28, 0x84, 0x31, 0x9f, 0x41, 0xbe, 0x01, 0x2d,
  0x62, 0x6e, 0x56, 0xbc, 0xa8, 0xac, 0x0a, 0x94, 0x48, 0x0f, 0x0b, 0x99,
  0xec, 0xf6, 0x2b, 0xae, 0x96, 0xa2, 0x08, 0x9d, 0x28, 0x03, 0xb1, 0xcc,
  0x74, 0xe8, 0x3a, 0xce, 0x26, 0x8b, 0x12, 0x51, 0x95, 0x39, 0xdf, 0x85,
  0x69, 0x0e, 0x5f, 0x23, 0x7a, 0x58, 0x89, 0x50, 0x10, 0x6b, 0x21, 0x8b,
  0x30, 0x96, 0x79, 0xbd, 0x2a, 0xa2, 0xcf, 0x75, 0xa5, 0x45, 0xba, 0xb3,
  0x8e, 0xbb, 0x08, 0x63, 0xc0, 0xb7, 0x8a, 0x16, 0x3c, 0xfe, 0xb2, 0x54,
  0xb2, 0x2e, 0x12, 0xfc, 0x92, 0x4b, 0x15, 0xde, 0x9c, 0x05, 0x0b, 0x77,
  0x16, 0x1c, 0x6e, 0x26, 0x4a, 0x96, 0x4f, 0xd1, 0xeb, 0xa7, 0x52, 0xad,
  0x4e, 0x66, 0x79, 0xad, 0x25, 0x43, 0x93, 0xe5, 0xd7, 0x88, 0xa2, 0x67,
  0xf1, 0x5c, 0x2c, 0x8b, 0x33, 0x94, 0x54, 0x09, 0x28, 0x4b, 0xf1, 0x44,
  0xd4, 0x55, 0x38, 0x45, 0x19, 0xb9, 0x01, 0x95, 0xe6, 0x72, 0x1b, 0x66,
  0x22, 0x49, 0xa0, 0x88, 0xb4, 0xc2, 0xdd, 0x88, 0xc6, 0x2b, 0x3b, 0xa8,
  0xfa, 0x26, 0xd8, 0x25, 0x44, 0xfb, 0x5f, 0x9c, 0x52, 0xcb, 0x05, 0x1f,
  0x38, 0xa6, 0x17, 0x04, 0xa6, 0x63, 0xda, 0xc1, 0xf0, 0xbc, 0xe1, 0x45,
  0x2e, 0xe3, 0x2f, 0x51, 0xc9, 0x93, 0x44, 0x14, 0xcb, 0xd0, 0x1b, 0xa3,
  0xd1, 0x52, 0x1e, 0x4d, 0x28, 0xc8, 0xb9, 0x16, 0x1b, 0x88, 0xe2, 0x5a,
  0x55, 0x08, 0x52, 0x4a, 0x41, 0x7e, 0xfe, 0xce, 0xec, 0xf3, 0xa2, 0xac,
  0xf5, 0xfe, 0x04, 0x5a, 0xc8, 0x02, 0xae, 0x3a, 0x17, 0xf2, 0x14, 0x41,
  0xcc, 0xab, 0x9f, 0x17, 0x90, 0x4a, 0x05, 0xfb, 0xb3, 0x17, 0x7c, 0x51,
  0x61, 0x02, 0x34, 0x44, 0xa7, 0xc0, 0x1b, 0x46, 0xa4, 0x65, 0x19, 0x3a,
  0x18, 0x2f, 0xad, 0xe5, 0x0a, 0x07, 0x39, 0xa4, 0x1a, 0x5f, 0xaa, 0x49,
  0xa8, 0xf3, 0x9b, 0x94, 0xa4, 0x69, 0x1a, 0x7d, 0xb3, 0x44, 0x91, 0xc0,
  0xd7, 0xd0, 0xf2, 0x7e, 0x0d, 0x34, 0xa3, 0x9f, 0xc3, 0x9c, 0xc3, 0xdf,
  0xbc, 0x3a, 0x83, 0xb8, 0x1d, 0x2b, 0x18, 0xa8, 0x12, 0xb8, 0xc6, 0x00,
  0x5a, 0xb9, 0x28, 0x80, 0x2b, 0x6b, 0x49, 0xd0, 0xe8, 0xeb, 0x60, 0x1c,
  0x24, 0xb0, 0x34, 0x9b, 0xb4, 0x95, 0x5c, 0xe1, 0x4a, 0x77, 0xcc, 0x82,
  0x5b, 0xe6, 0x4d, 0xc7, 0x71, 0xce, 0x6f, 0xd7, 0xb9, 0x35, 0x8c, 0x64,
  0xc9, 0x63, 0xa1, 0x77, 0xa1, 0xf3, 0xc7, 0x6c, 0xdb, 0xe4, 0xda, 0x33,
  0xe2, 0xc7, 0x6f, 0xbc, 0x3c, 0x41, 0xd8, 0x5e, 0xf0, 0xd3, 0x8e, 0xec,
  0xb6, 0x6e, 0x1e, 0xd6, 0x18, 0xb9, 0x62, 0xdf, 0xc6, 0x01, 0x2d, 0xc9,
  0x5a, 0x93, 0xe7, 0x38, 0x6a, 0xaa, 0x91, 0x8a, 0xe2, 0xd6, 0x89, 0x14,
  0x0d, 0x11, 0x9b, 0x0a, 0xab, 0xc4, 0x37, 0x08, 0x03, 0xe2, 0xee, 0xaf,
  0x11, 0xf6, 0xbd, 0x38, 0xf1, 0xbd, 0xe8, 0x12, 0xef, 0x3f, 0x92, 0xe6,
  0xe2, 0x3d, 0xfa, 0xf0, 0xd5, 0xaa, 0x32, 0x9e, 0x20, 0xc9, 0x1d, 0x86,
  0x21, 0x98, 0x60, 0x26, 0x8e, 0x68, 0x87, 0x7e, 0xd1, 0xef, 0x5b, 0x70,
  0x8a, 0x54, 0xc7, 0x9f, 0x31, 0xfa, 0x73, 0xe8, 0xb5, 0x83, 0x93, 0xdc,
  0x1d, 0x14, 0xec, 0x89, 0xfa, 0x24, 0x7a, 0x77, 0xd4, 0x36, 0x94, 0xbb,
  0xa3, 0xb6, 0xbd, 0x50, 0x53, 0xb8, 0x77, 0x37, 0xa5, 0xe0, 0x88, 0x64,
  0x6e, 0x74, 0xbd, 0x34, 0x18, 0x6f, 0x3a, 0xc0, 0xdc, 0x18, 0xd5, 0x65,
  0xc2, 0x35, 0xf6, 0x3e, 0xec, 0x6b, 0x99, 0x44, 0x31, 0x64, 0x27, 0x36,
  0x34, 0x59, 0x54, 0xf5, 0x62, 0x25, 0xb0, 0xa3, 0xb5, 0xf6, 0x49, 0xb1,
  0x1a, 0xc0, 0x06, 0x73, 0x3b, 0xc4, 0xfe, 0x25, 0xa8, 0x28, 0x98, 0xde,
  0x95, 0xd8, 0x05, 0x69, 0x27, 0x06, 0x75, 0xc4, 0xe3, 0xb8, 0xfa, 0xf8,
  0xc9, 0x68, 0x0c, 0x9e, 0xaa, 0xa7, 0x81, 0xc3, 0x36, 0x5a, 0x2c, 0x51,
  0x82, 0x27, 0x3d, 0x2c, 0x72, 0x24, 0x86, 0x12, 0xed, 0xd8, 0x0b, 0x51,
  0x20, 0x72, 0x4e, 0x31, 0x61, 0xe8, 0x74, 0x47, 0xbf, 0x85, 0x3b, 0x47,
  0x8c, 0xe0, 0x12, 0xc5, 0x97, 0x18, 0x64, 0x94, 0xa2, 0xa7, 0x12, 0x09,
  0x3c, 0x86, 0x94, 0xd7, 0xb9, 0x3e, 0xe2, 0x9a, 0xe7, 0x34, 0x0c, 0x86,
  0x27, 0x79, 0x5c, 0xff, 0x3f, 0x85, 0x1c, 0xf8, 0x06, 0xfe, 0xae, 0xf0,
  0xa4, 0x48, 0x4e, 0x3a, 0xb2, 0xfc, 0x47, 0x71, 0xf3, 0xe7, 0x38, 0xe0,
  0x69, 0xb0, 0x59, 0xb2, 0xf6, 0xf8, 0x30, 0xfc, 0xc0, 0x31, 0x58, 0xdb,
  0xc5, 0x8f, 0x13, 0x3a, 0x6a, 0x1e, 0xca, 0xaf, 0x73, 0x83, 0x98, 0xe4,
  0x39, 0xe3, 0x29, 0x73, 0xef, 0xcc, 0x3c, 0x83, 0x7d, 0x5d, 0xe5, 0x45,
  0x35, 0x37, 0xe8, 0x48, 0x0b, 0x47, 0xa3, 0xed, 0x76, 0x6b, 0x6f, 0x7d,
  0x5b, 0xaa, 0xe5, 0xc8, 0x43, 0x82, 0x8c, 0x10, 0x12, 0x81, 0x4b, 0xae,
  0x33, 0x86, 0x01, 0x7c, 0xe9, 0xfa, 0xe3, 0x31, 0x9b, 0x4e, 0xc6, 0x6b,
  0xc7, 0x72, 0xc7, 0xd6, 0xcc, 0xf2, 0xfc, 0xdc, 0xf2, 0x03, 0x8f, 0x7e,
  0x6b, 0x9c, 0xd2, 0x82, 0x35, 0xd3, 0xf8, 0x64, 0x33, 0xfa, 0xe0, 0x32,
  0xfc, 0xad, 0x2d, 0x17, 0xa9, 0xeb, 0xd1, 0xd3, 0x1b, 0x13, 0x8b, 0xc7,
  0x6c, 0xc6, 0x3c, 0x5f, 0x93, 0x50, 0xe6, 0x79, 0xe3, 0x0d, 0x29, 0xe3,
  0x32, 0x4e, 0xed, 0x80, 0x79, 0x9e, 0x1d, 0x68, 0x7a, 0xd0, 0x2c, 0x73,
  0x67, 0xde, 0x1a, 0x3f, 0x38, 0xcd, 0xb2, 0x35, 0xc3, 0x4f, 0xf8, 0xb3,
  0x68, 0xb2, 0x21, 0x9b, 0xa4, 0x7e, 0xe5, 0xfb, 0xb7, 0xd5, 0x64, 0x8c,
  0xcb, 0xd3, 0x29, 0x41, 0x07, 0x33, 0xcb, 0x75, 0x3d, 0x42, 0xbf, 0xe3,
  0xa2, 0x8c, 0xd5, 0xbc, 0x58, 0xb3, 0x94, 0xa1, 0x5f, 0x28, 0x64, 0xb9,
  0xd3, 0x80, 0x39, 0x96, 0xef, 0x4e, 0x50, 0xdf, 0xf5, 0x49, 0xaa, 0x7d,
  0xb5, 0x4b, 0xb4, 0x5f, 0xdf, 0x61, 0x77, 0x1c, 0xcb, 0x1b, 0x3b, 0xda,
  0x9d, 0x4e, 0x2d, 0x77, 0x12, 0xac, 0x2d, 0xdc, 0xb8, 0x83, 0x8f, 0xb1,
  0xcf, 0xf0, 0xe5, 0x7a, 0x68, 0x08, 0x21, 0x26, 0x9e, 0xc6, 0x9f, 0x85,
  0xe3, 0xb5, 0x1b, 0x4c, 0x18, 0x39, 0x11, 0xa0, 0xb5, 0xe9, 0x1d, 0xd2,
  0x23, 0x1f, 0x7c, 0x77, 0x7d, 0xc7, 0xb5, 0x26, 0x28, 0x3e, 0x99, 0x34,
  0x2f, 0x87, 0xa4, 0xdc, 0xa9, 0xcb, 0xee, 0x04, 0xfa, 0x4e, 0x40, 0xa3,
  0x35, 0xda, 0x9a, 0x58, 0x63, 0x17, 0xa3, 0x32, 0x65, 0x64, 0xd9, 0x77,
  0x99, 0xe7, 0xfa, 0xe4, 0xb4, 0x8f, 0x60, 0x7a, 0xea, 0x37, 0x40, 0x08,
  0xf7, 0xcd, 0x18, 0xdd, 0xbb, 0x4b, 0x69, 0xc2, 0x6a, 0x55, 0x48, 0x81,
  0x92, 0x17, 0x27, 0xae, 0x5f, 0xba, 0x83, 0x71, 0xef, 0x51, 0x26, 0x65,
  0x05, 0x2c, 0x15, 0x6a, 0xb5, 0xc5, 0xfe, 0x4a, 0xa5, 0xc2, 0xa4, 0x62,
  0xc4, 0x51, 0x26, 0x34, 0x32, 0x45, 0x01, 0xa2, 0xa0, 0xf2, 0x4f, 0x30,
  0xdd, 0xde, 0x61, 0xdc, 0x3b, 0x89, 0x8c, 0x9a, 0x1a, 0xeb, 0x17, 0x71,
  0x5b, 0xed, 0xc8, 0x33, 0x9e, 0xd7, 0x38, 0x7d, 0xdf, 0x34, 0x05, 0xf6,
  0xb4, 0x35, 0x48, 0x37, 0xa3, 0x9c, 0x57, 0xc8, 0xb3, 0x6e, 0x8f, 0x25,
  0x40, 0x6a, 0x2e, 0x68, 0x2f, 0x56, 0xa2, 0xd4, 0xf7, 0xd2, 0xba, 0x68,
  0x9a, 0x0a, 0xfb, 0xa5, 0x02, 0x86, 0x7b, 0xb0, 0x4b, 0xd5, 0x30, 0xfd,
  0xb4, 0x36, 0x34, 0xc1, 0xae, 0xf0, 0xb0, 0x7b, 0x83, 0x35, 0xc3, 0x97,
  0x9c, 0xf4, 0x06, 0xc3, 0xc3, 0x19, 0xa2, 0x53, 0x8d, 0xfb, 0x5e, 0x7b,
  0x6d, 0x1c, 0x79, 0x21, 0x2a, 0x6d, 0x63, 0x05, 0x0d, 0x8c, 0xb3, 0x9c,
  0xd1, 0x53, 0xbe, 0x94, 0xda, 0x75, 0x7d, 0x05, 0x2b, 0x94, 0xb9, 0x02,
  0x71, 0x29, 0xcf, 0x56, 0xbf, 0x84, 0x76, 0x3e, 0x07, 0x5b, 0xe3, 0x7d,
  0x07, 0xb4, 0xdd, 0xb4, 0xba, 0xef, 0xdf, 0xc1, 0xc6, 0x48, 0xf1, 0x77,
  0x74, 0x9e, 0xa5, 0xa0, 0xda, 0x55, 0xb3, 0xca, 0xe4, 0xb6, 0x55, 0xef,
  0xea, 0x76, 0xe0, 0x49, 0xe0, 0x8c, 0x6f, 0x50, 0xe7, 0xbb, 0x31, 0x87,
  0x8f, 0xce, 0x27, 0x9b, 0xda, 0xa8, 0x8d, 0x57, 0x0d, 0xa1, 0x07, 0x86,
  0x6d, 0x0c, 0xed, 0x52, 0x96, 0x83, 0xe1, 0xfd, 0x41, 0x8f, 0x0f, 0xb6,
  0x28, 0x0a, 0x50, 0x34, 0x9a, 0x1b, 0x6f, 0xdf, 0xbd, 0x7e, 0x13, 0xb2,
  0xd7, 0x45, 0xbe, 0x63, 0x71, 0x4b, 0x92, 0x86, 0x1c, 0x24, 0xcf, 0x6e,
  0xdc, 0xb8, 0x61, 0x98, 0x78, 0xe7, 0x54, 0x7a, 0xf0, 0x57, 0xb9, 0xa1,
  0x79, 0xee, 0xb6, 0xf6, 0x91, 0x03, 0x86, 0xd9, 0x0b, 0x9c, 0x82, 0x0a,
  0x30, 0x6d, 0xc3, 0xf0, 0x8a, 0x2f, 0x17, 0xff, 0x2f, 0xdb, 0x6c, 0xe9,
  0x72, 0xde, 0xa8, 0x48, 0x07, 0xbf, 0xe1, 0x81, 0x33, 0x9f, 0x9f, 0x6c,
  0x1f, 0xa3, 0x6a, 0xe7, 0x50, 0x2c, 0x75, 0x36, 0xbc, 0xbe, 0x6b, 0xc8,
  0xf1, 0x06, 0xcb, 0xb8, 0x66, 0xd8, 0xa2, 0x2b, 0xcd, 0xdc, 0x66, 0x23,
  0x37, 0x8c, 0x08, 0xf2, 0x0a, 0xf6, 0xed, 0x51, 0xd3, 0xb2, 0x7e, 0x60,
  0xbc, 0x27, 0x1f, 0xe8, 0xb4, 0xb7, 0x6d, 0x0c, 0x68, 0xb4, 0xe1, 0x8a,
  0xe9, 0x79, 0x01, 0x5b, 0x46, 0xbb, 0x7a, 0x8c, 0xb9, 0x8b, 0x90, 0x4a,
  0x98, 0x23, 0xa4, 0xca, 0xd9, 0x8d, 0x66, 0x1b, 0x66, 0x37, 0x77, 0xb8,
  0xb7, 0x9f, 0xe7, 0x8d, 0x10, 0xc6, 0x0d, 0x74, 0x9c, 0x0d, 0x7a, 0xa1,
  0x6a, 0xcf, 0x56, 0x73, 0xdf, 0x1e, 0xa9, 0x61, 0xef, 0x5b, 0xbb, 0x66,
  0xd2, 0xd9, 0x1c, 0xea, 0xc3, 0xd0, 0xd6, 0x19, 0x14, 0x83, 0x53, 0xc0,
  0xce, 0x41, 0x92, 0x5f, 0x86, 0x0a, 0x74, 0xad, 0x0a, 0x86, 0x7c, 0xc3,
  0x2d, 0x0f, 0x86, 0x91, 0xce, 0x94, 0xdc, 0x32, 0x72, 0xfc, 0x89, 0x52,
  0x52, 0x0d, 0x8c, 0x57, 0xa0, 0xb7, 0x52, 0x7d, 0x61, 0x98, 0x98, 0x52,
  0x16, 0x98, 0xd1, 0x2d, 0xaf, 0x58, 0x21, 0x35, 0x93, 0x5f, 0x70, 0xa3,
  0xbf, 0x81, 0xee, 0x07, 0x06, 0x6e, 0x1b, 0x26, 0xea, 0x52, 0x70, 0x18,
  0x32, 0xc1, 0x77, 0x2a, 0x62, 0x41, 0x8c, 0x48, 0x32, 0x07, 0x3b, 0x97,
  0x4b, 0xd4, 0x30, 0x31, 0xe5, 0xef, 0xc4, 0x0a, 0xf0, 0x12, 0x75, 0x01,
  0x1a, 0xee, 0xf1, 0x62, 0xdd, 0x14, 0xac, 0xdd, 0xaa, 0x63, 0xdd, 0x9a,
  0x3e, 0x8c, 0xc9, 0x24, 0xae, 0xc7, 0xd9, 0x75, 0x9b, 0x46, 0xe3, 0x7a,
  0xc8, 0x8c, 0xdb, 0x80, 0x81, 0xa8, 0x2a, 0x3c, 0x93, 0x7b, 0x26, 0x2f,
  0x02, 0xe6, 0x49, 0xe0, 0x7f, 0x9c, 0x08, 0xc0, 0x47, 0x27, 0x0e, 0x17,
  0xfe, 0x75, 0x8d, 0x93, 0x33, 0xdd, 0x7e, 0xd8, 0x65, 0xee, 0x81, 0x58,
  0xd1, 0x4d, 0xd3, 0x3c, 0x91, 0x71, 0xbd, 0x42, 0x9a, 0xda, 0x58, 0xea,
  0x4f, 0x72, 0xa0, 0xe1, 0xc3, 0xdd, 0x73, 0x6c, 0x38, 0x5d, 0x29, 0x8c,
  0x57, 0x8f, 0xa2, 0xd7, 0xb5, 0x7a, 0x62, 0xa8, 0xd6, 0x75, 0xe4, 0xba,
  0x56, 0x57, 0xaa, 0x5b, 0xa1, 0xd7, 0x35, 0x2e, 0x57, 0xa6, 0x61, 0x8f,
  0xae, 0x77, 0x47, 0xc7, 0x1e, 0x7d, 0x77, 0xd4, 0xde, 0x0a, 0x47, 0xcd,
  0xff, 0xe1, 0x1f, 0x78, 0x62, 0xe0, 0x81, 0x25, 0x0f, 0x00, 0x00
};

#define upload_min_htm_gz_len 1636
static const char upload_min_htm_gz[] PROGMEM = {
  0x1f, 0x8b, 0x08, 0x08, 0x34, 0x1f, 0x38, 0x5c, 0x04, 0x00, 0x75, 0x70,
  0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x6d, 0x69, 0x6e, 0x2e, 0x68, 0x74, 0x6d,
  0x00, 0x9d, 0x57, 0x5b, 0xef, 0x93, 0x30, 0x14, 0xff, 0x2a, 0x15, 0x63,
  0xb2, 0x45, 0x60, 0x8c, 0xc1, 0xdc, 0x60, 0xcc, 0x78, 0x8d, 0xc6, 0x6b,
  0xa2, 0x3e, 0x18, 0xe3, 0x43, 0x85, 0xc3, 0xa8, 0xb2, 0x16, 0x4b, 0xd9,
  0x9c, 0xf3, 0xff, 0xdd, 0x3d, 0x2d, 0x1b, 0x63, 0xea, 0xbc, 0x3d, 0x50,
  0x4a, 0x7b, 0xce, 0xef, 0xdc, 0x4f, 0xcb, 0xe2, 0xda, 0xfd, 0x17, 0xf7,
  0x5e, 0xbf, 0x7d, 0xf9, 0x80, 0x14, 0x6a, 0x5d, 0x2e, 0x17, 0xed, 0xb8,
  0x06, 0x45, 0x71, 0x41, 0x55, 0x0e, 0x7c, 0x6e, 0xd8, 0x26, 0xb1, 0xee,
  0x09, 0xae, 0x80, 0x2b, 0xe7, 0xf5, 0xae, 0x02, 0x8b, 0xa4, 0xed, 0x57,
  0x62, 0x29, 0xf8, 0xa2, 0x46, 0x9a, 0x25, 0x26, 0x69, 0x41, 0x65, 0x0d,
  0x2a, 0x69, 0x54, 0xee, 0xcc, 0xac, 0x03, 0x04, 0xa7, 0x6b, 0x48, 0xac,
  0x0d, 0x83, 0x6d, 0x25, 0xa4, 0xea, 0x31, 0x6e, 0x59, 0xa6, 0x8a, 0x24,
  0x83, 0x0d, 0x4b, 0xc1, 0x31, 0x1f, 0x36, 0xe3, 0x4c, 0x31, 0x5a, 0x3a,
  0x75, 0x4a, 0x4b, 0x48, 0x3c, 0x37, 0x44, 0x90, 0x02, 0x68, 0xb6, 0x5c,
  0xd4, 0x6a, 0x57, 0xc2, 0xf2, 0x83, 0xc8, 0x76, 0xfb, 0x35, 0x95, 0x2b,
  0xc6, 0x23, 0x2f, 0x2e, 0x80, 0xad, 0x0a, 0x15, 0x8d, 0x3d, 0x6f, 0x53,
  0xc4, 0x19, 0xab, 0xab, 0x92, 0xee, 0xa2, 0xbc, 0x84, 0x2f, 0xb1, 0x1e,
  0x9c, 0x8c, 0x49, 0x48, 0x15, 0x13, 0x3c, 0x4a, 0x45, 0xd9, 0xac, 0x79,
  0xfc, 0xb1, 0xa9, 0x15, 0xcb, 0x77, 0xce, 0x41, 0x83, 0x28, 0x05, 0x7c,
  0xcb, 0xf8, 0x03, 0x4d, 0x3f, 0xad, 0xa4, 0x68, 0x78, 0x86, 0x3b, 0xa5,
  0x90, 0xd1, 0xf5, 0xd4, 0xa7, 0x41, 0xea, 0x5d, 0x5d, 0xcf, 0xa4, 0xa8,
  0x1e, 0xb2, 0x12, 0x1e, 0x0a, 0xb9, 0x3e, 0x8a, 0xa5, 0x8d, 0x12, 0x04,
  0x45, 0x56, 0x5f, 0x62, 0x6d, 0xb9, 0x43, 0x4b, 0xb6, 0xe2, 0x1d, 0x94,
  0x90, 0x19, 0x48, 0x47, 0xd2, 0x8c, 0x35, 0x75, 0x34, 0x43, 0x1a, 0xb1,
  0x01, 0x99, 0x97, 0x62, 0x1b, 0x15, 0x2c, 0xcb, 0x80, 0xc7, 0x4a, 0x52,
  0x5e, 0x33, 0xa3, 0x95, 0x1b, 0xd6, 0xe7, 0x22, 0xc8, 0xf5, 0x1c, 0x67,
  0x4f, 0xe9, 0x07, 0x28, 0xf7, 0x3f, 0x29, 0x25, 0x57, 0x1f, 0xe8, 0xc0,
  0x0f, 0x6e, 0xd9, 0x9e, 0xed, 0x87, 0xa1, 0xed, 0x86, 0xc3, 0xce, 0xe4,
  0x0f, 0xa5, 0x48, 0x3f, 0xc5, 0x15, 0xcd, 0x32, 0xc6, 0x57, 0x91, 0x1f,
  0xa0, 0xd8, 0x4a, 0x1c, 0x84, 0x48, 0x28, 0xa9, 0x62, 0x1b, 0x88, 0xd3,
  0x46, 0xd6, 0x08, 0x53, 0x09, 0xa6, 0x35, 0xfd, 0x95, 0xe0, 0xc7, 0xbc,
  0x6a, 0xd4, 0xfe, 0x08, 0xca, 0x05, 0x87, 0x8b, 0xea, 0x45, 0x34, 0x47,
  0x10, 0xfb, 0xe2, 0xf6, 0x07, 0xc8, 0x85, 0x84, 0x7d, 0xa7, 0x05, 0xfd,
  0x50, 0x63, 0x08, 0x14, 0xc4, 0x47, 0xd7, 0x5b, 0x56, 0xac, 0x44, 0x15,
  0x79, 0xe8, 0x31, 0xa5, 0xc4, 0x1a, 0x27, 0x25, 0xe4, 0x0a, 0x5f, 0xd2,
  0x84, 0xd4, 0xfb, 0x45, 0x50, 0xf2, 0x3c, 0x8f, 0xbf, 0x3a, 0x8c, 0x67,
  0xf0, 0x25, 0x72, 0xfc, 0x9f, 0x5d, 0x4d, 0xf4, 0xe3, 0x11, 0xef, 0xea,
  0x4f, 0x5a, 0x75, 0x20, 0xe3, 0x9e, 0x14, 0x74, 0x54, 0x05, 0x54, 0xa1,
  0x03, 0x9d, 0x92, 0x71, 0xa0, 0xd2, 0x59, 0x69, 0x68, 0xd4, 0x75, 0x10,
  0x84, 0x19, 0xac, 0x6c, 0x13, 0xb8, 0x8a, 0x4a, 0x5c, 0xe9, 0xcf, 0x49,
  0x78, 0xc3, 0xbe, 0xee, 0x79, 0x5e, 0xf7, 0x1e, 0x7b, 0x37, 0x86, 0xb1,
  0xa8, 0x68, 0xca, 0xd4, 0x2e, 0xf2, 0x7e, 0x1b, 0x6f, 0x57, 0xab, 0xf6,
  0x48, 0x67, 0xc8, 0x2f, 0xb4, 0x3c, 0x42, 0xb8, 0x7e, 0xf8, 0x83, 0x45,
  0x6e, 0x53, 0x95, 0x82, 0x66, 0x77, 0x1b, 0xf4, 0x1c, 0xdf, 0xb7, 0x7e,
  0x40, 0x49, 0xa2, 0x51, 0x5a, 0x73, 0x9c, 0x99, 0x5a, 0xd2, 0x65, 0x71,
  0xe3, 0x98, 0x14, 0x26, 0x15, 0x73, 0xf4, 0xbd, 0x53, 0xb3, 0xaf, 0x10,
  0x85, 0x3a, 0x7b, 0x7f, 0xf6, 0xf0, 0xfc, 0x96, 0x37, 0x9e, 0x4d, 0xe2,
  0x93, 0xbf, 0x7f, 0x9b, 0x34, 0x27, 0xed, 0x51, 0x87, 0x2f, 0x4e, 0x5d,
  0xd0, 0x0c, 0xd3, 0xdc, 0x23, 0xe8, 0x82, 0x29, 0x46, 0xe2, 0xfa, 0xc4,
  0x4f, 0xb3, 0x89, 0x7f, 0x75, 0xb2, 0xec, 0x35, 0x96, 0xcb, 0xbe, 0x05,
  0xd7, 0x9e, 0xea, 0xe9, 0x13, 0x78, 0x47, 0xf5, 0x72, 0xba, 0x66, 0xe5,
  0x2e, 0xba, 0x23, 0xb1, 0x0b, 0xd8, 0x8f, 0xa0, 0xdc, 0x80, 0x62, 0x29,
  0xb5, 0x6b, 0x74, 0xa2, 0x53, 0x83, 0x64, 0xf9, 0xd5, 0x62, 0xd4, 0xb6,
  0x82, 0xc5, 0xa8, 0x6d, 0x0c, 0xba, 0x25, 0x2c, 0x17, 0xb9, 0x76, 0x0c,
  0xcb, 0x12, 0xab, 0xaf, 0xa1, 0x45, 0xa8, 0xa9, 0xff, 0xc4, 0x1a, 0xb5,
  0x2e, 0xb3, 0x08, 0x76, 0xa4, 0x42, 0x20, 0x19, 0x66, 0x26, 0xb6, 0x22,
  0xc1, 0xeb, 0xe6, 0xc3, 0x9a, 0x61, 0x2f, 0x6a, 0xf7, 0x35, 0x63, 0x3d,
  0x80, 0x0d, 0xc6, 0x75, 0x88, 0x9d, 0x87, 0xe9, 0x82, 0x20, 0x6a, 0x57,
  0x61, 0xff, 0xd2, 0x56, 0x58, 0xba, 0x97, 0x1d, 0xe6, 0xf5, 0xbb, 0xf7,
  0x96, 0x11, 0xd8, 0x55, 0x0e, 0x82, 0x37, 0xa5, 0x62, 0x55, 0x09, 0x88,
  0x8b, 0x9d, 0x90, 0xaf, 0x90, 0x94, 0x66, 0x3f, 0x82, 0x96, 0xda, 0x15,
  0x04, 0xf5, 0xed, 0xb1, 0xb6, 0x48, 0x9d, 0xa3, 0xb4, 0x62, 0x99, 0xa4,
  0x2b, 0xf4, 0x2d, 0x52, 0xe9, 0x51, 0xb2, 0x0c, 0xee, 0x43, 0x4e, 0x51,
  0xc0, 0x01, 0xc9, 0xee, 0xbc, 0x3f, 0x18, 0x1e, 0xe9, 0x71, 0xfd, 0xdf,
  0x18, 0x4a, 0xa0, 0x1b, 0xf8, 0x33, 0xc3, 0x03, 0x9e, 0x1d, 0x79, 0x44,
  0xf5, 0x97, 0xe4, 0xf6, 0xcf, 0x96, 0xd7, 0x9b, 0x15, 0x69, 0x7b, 0xbe,
  0x35, 0xf1, 0x3c, 0x8b, 0xb4, 0xed, 0xfb, 0xf0, 0xa1, 0xcf, 0x87, 0xbb,
  0xe2, 0x4b, 0x62, 0x99, 0x04, 0xba, 0x35, 0xf7, 0xcd, 0x60, 0x91, 0x2f,
  0xeb, 0x92, 0xd7, 0x89, 0xa5, 0xcf, 0xa1, 0x68, 0x34, 0xda, 0x6e, 0xb7,
  0xee, 0x76, 0xe2, 0x0a, 0xb9, 0x1a, 0xf9, 0x98, 0x42, 0x23, 0x84, 0x44,
  0xe0, 0x8a, 0xaa, 0x82, 0xa0, 0x03, 0x9f, 0x8d, 0x27, 0x41, 0x40, 0xf4,
  0xf0, 0xd9, 0x73, 0xfc, 0xa9, 0x33, 0x9e, 0x3b, 0x41, 0xa8, 0xf0, 0x69,
  0x67, 0x04, 0xc7, 0xf1, 0x9c, 0xe0, 0xc4, 0x8c, 0xdd, 0x44, 0x2f, 0x1a,
  0x82, 0xaf, 0x6b, 0x3f, 0x9c, 0x12, 0xef, 0x7f, 0x99, 0xc7, 0xfe, 0xcc,
  0xf1, 0xfd, 0x60, 0x33, 0xf1, 0x11, 0x82, 0x04, 0x88, 0x32, 0x23, 0xd3,
  0x99, 0x72, 0xa6, 0x33, 0xe2, 0xcf, 0x0a, 0x67, 0x1c, 0xdc, 0xf2, 0x3f,
  0x3b, 0x01, 0xda, 0x87, 0x2b, 0xb8, 0xa7, 0xf0, 0xc1, 0xd9, 0xc6, 0x31,
  0xf4, 0x7a, 0xc3, 0x7c, 0x2b, 0xb3, 0x59, 0x04, 0xd3, 0xb0, 0x1c, 0x4f,
  0x50, 0xc8, 0x64, 0xfa, 0x39, 0x9c, 0x91, 0x70, 0xaa, 0x67, 0xf8, 0x52,
  0xf8, 0x72, 0xc2, 0x69, 0xa9, 0x5f, 0xf8, 0x20, 0x5d, 0xf0, 0x59, 0x63,
  0x12, 0x23, 0x45, 0x19, 0x91, 0x5f, 0xd7, 0x88, 0x19, 0x22, 0xd5, 0xfc,
  0xf3, 0xf8, 0x16, 0x09, 0xc6, 0x28, 0x9a, 0xdc, 0xf2, 0x4a, 0x27, 0x08,
  0x66, 0x04, 0x9f, 0xcf, 0xce, 0x78, 0x46, 0x8e, 0x46, 0x1d, 0x2c, 0x34,
  0x9b, 0x8e, 0xd9, 0x9c, 0x8c, 0x1d, 0x7f, 0x8e, 0x2c, 0xce, 0x2d, 0x1d,
  0x08, 0x67, 0x32, 0x27, 0xe1, 0x1c, 0xc7, 0x02, 0x7d, 0xb3, 0xd1, 0x14,
  0xc6, 0x3d, 0x2d, 0xbf, 0xd2, 0xbc, 0x66, 0xe7, 0x33, 0x2e, 0x79, 0xa4,
  0x45, 0x34, 0x7e, 0xd9, 0x20, 0xa5, 0xd9, 0x08, 0x7c, 0xdc, 0x08, 0xe7,
  0x64, 0x32, 0xff, 0x6a, 0x8d, 0x96, 0x0b, 0x1d, 0x32, 0x2c, 0x5a, 0x89,
  0xe9, 0x50, 0x51, 0x7e, 0xcc, 0xfb, 0x53, 0x83, 0xb0, 0x96, 0xf7, 0x0a,
  0x21, 0x6a, 0x38, 0x15, 0x93, 0xa9, 0x36, 0x22, 0x24, 0xd1, 0x19, 0x4b,
  0x54, 0x01, 0x6b, 0xcc, 0x1c, 0x09, 0x88, 0x84, 0x00, 0x67, 0x50, 0xc7,
  0x32, 0x7e, 0xa5, 0xa8, 0x6a, 0x6a, 0x6b, 0x79, 0x24, 0x19, 0x99, 0x9a,
  0x3b, 0xaf, 0xe7, 0xb6, 0xf0, 0x31, 0xef, 0x68, 0xd9, 0xe0, 0xe7, 0x1b,
  0xc3, 0x48, 0xf0, 0x68, 0x7f, 0xf5, 0xf2, 0xf1, 0xc3, 0x87, 0x35, 0x5e,
  0x53, 0x4a, 0x5a, 0x63, 0xe2, 0xf5, 0x7b, 0xad, 0x46, 0xd4, 0x8d, 0x06,
  0x05, 0xa6, 0x92, 0x55, 0x6a, 0x99, 0x37, 0xdc, 0x34, 0x18, 0xf2, 0x53,
  0x49, 0x0c, 0xf7, 0xe0, 0x56, 0xd2, 0xa4, 0xfe, 0x71, 0x6d, 0x68, 0x83,
  0x5b, 0xe3, 0xa1, 0xf7, 0x12, 0x8b, 0x88, 0xae, 0xa8, 0xe6, 0x1b, 0x0c,
  0xaf, 0x3a, 0x88, 0x5e, 0x79, 0xee, 0xcf, 0xda, 0xac, 0x51, 0xe4, 0x29,
  0xab, 0x95, 0x8b, 0x25, 0x35, 0xb0, 0x3a, 0x3a, 0xeb, 0x8c, 0xf9, 0x54,
  0x7b, 0x97, 0xf9, 0x25, 0xac, 0x91, 0xe6, 0x02, 0xc4, 0xa9, 0x5e, 0x5b,
  0xfe, 0x0a, 0xda, 0xef, 0x04, 0x5c, 0x85, 0x37, 0x1f, 0x50, 0xae, 0x09,
  0xc4, 0xb7, 0x6f, 0xe0, 0x66, 0x54, 0xd1, 0xd7, 0xfa, 0x5c, 0xcb, 0x41,
  0xb6, 0xab, 0x76, 0x5d, 0x88, 0x6d, 0xcb, 0xde, 0xe7, 0xed, 0xc1, 0x6b,
  0x82, 0x0e, 0x9f, 0x8b, 0x17, 0xf9, 0x11, 0xbc, 0x04, 0xbe, 0xc2, 0x9b,
  0xdf, 0x71, 0xb2, 0x1c, 0xdf, 0x3e, 0xcb, 0x07, 0x97, 0x71, 0x0e, 0x52,
  0xcf, 0x3a, 0xda, 0x9b, 0xd6, 0x21, 0x27, 0x6a, 0x28, 0xf1, 0x82, 0x07,
  0x99, 0x15, 0x5d, 0x64, 0x79, 0xe7, 0xbd, 0x77, 0x75, 0xd3, 0x3e, 0x29,
  0x62, 0x02, 0x7a, 0x32, 0x95, 0xe5, 0x83, 0x5f, 0x44, 0xca, 0x4b, 0x92,
  0x4e, 0xc7, 0xe1, 0x25, 0x70, 0xeb, 0x95, 0x91, 0x4f, 0xa8, 0x22, 0xd8,
  0x48, 0x6b, 0x45, 0xc6, 0x46, 0xaf, 0x6b, 0x56, 0x0c, 0x65, 0x0d, 0xfb,
  0xf6, 0x08, 0x68, 0x73, 0x71, 0xd0, 0x26, 0x98, 0x3e, 0x8a, 0x5d, 0xd7,
  0xb5, 0x86, 0x31, 0xa6, 0xd1, 0x60, 0x43, 0x25, 0x51, 0xb6, 0x48, 0x38,
  0x6c, 0x89, 0x8e, 0xd4, 0x7d, 0x74, 0xab, 0xcd, 0x13, 0xbc, 0x33, 0x24,
  0x7d, 0x27, 0xbe, 0xe3, 0xef, 0x63, 0x7e, 0xf3, 0xe6, 0x50, 0xb8, 0x14,
  0xd7, 0x30, 0xbe, 0xdd, 0xb1, 0x61, 0x2c, 0xb3, 0x95, 0xdd, 0x4e, 0x10,
  0x14, 0x54, 0x5a, 0x0c, 0xce, 0x82, 0xdf, 0x1e, 0x80, 0xf6, 0xbe, 0x3d,
  0xf7, 0xa2, 0xb3, 0xbd, 0x76, 0xcd, 0xd6, 0x07, 0x68, 0x24, 0xae, 0x86,
  0x2e, 0x96, 0x16, 0x1f, 0x1c, 0xfd, 0xd4, 0xf9, 0x46, 0x7c, 0x1a, 0x4a,
  0x50, 0x8d, 0xe4, 0x04, 0x13, 0x01, 0xcd, 0x1e, 0x0c, 0x63, 0x55, 0x48,
  0xb1, 0x25, 0x5a, 0xed, 0x07, 0x52, 0xa2, 0x21, 0xd6, 0x73, 0x50, 0x5b,
  0x21, 0x3f, 0x11, 0x09, 0x75, 0x25, 0x38, 0x16, 0xef, 0x96, 0xd6, 0x84,
  0x0b, 0x45, 0xc4, 0x27, 0x34, 0xf6, 0x57, 0xd0, 0xf8, 0x97, 0xf0, 0x9a,
  0xad, 0x01, 0xef, 0x2c, 0xa7, 0xe5, 0xe1, 0x3e, 0x45, 0x66, 0x51, 0x62,
  0x9c, 0xc5, 0x6a, 0x60, 0xbd, 0x78, 0x12, 0x11, 0xcb, 0x86, 0xa1, 0x8d,
  0xb7, 0x5b, 0x53, 0x2d, 0x98, 0xbf, 0xda, 0x87, 0x58, 0x34, 0x76, 0xe8,
  0x79, 0x1a, 0x16, 0xd7, 0xd1, 0xe0, 0x13, 0xee, 0x0f, 0x08, 0x46, 0x3b,
  0x03, 0x82, 0xb6, 0xd6, 0x35, 0x1e, 0x90, 0xc8, 0x74, 0x75, 0x4a, 0x85,
  0x7e, 0x84, 0x34, 0x73, 0xbf, 0x7b, 0xf4, 0x93, 0xe8, 0x4a, 0x47, 0xaa,
  0xef, 0xba, 0x24, 0x13, 0x69, 0xb3, 0xc6, 0x8c, 0x71, 0xb1, 0x2e, 0x1e,
  0x94, 0xa0, 0xa7, 0x77, 0x77, 0x8f, 0xb3, 0xc1, 0xf9, 0xf5, 0x63, 0x68,
  0x9f, 0xa5, 0xce, 0x65, 0xae, 0x33, 0x32, 0x64, 0xeb, 0x2b, 0x72, 0x99,
  0xab, 0x4f, 0x85, 0x4c, 0x5d, 0x5a, 0x5c, 0xe6, 0xe8, 0x48, 0x90, 0xbc,
  0x9f, 0x62, 0xf6, 0xa9, 0x20, 0xbd, 0xc5, 0xe8, 0xd0, 0xdc, 0x16, 0xa3,
  0xf6, 0x6a, 0x35, 0x32, 0xbf, 0x83, 0xdf, 0x01, 0x2b, 0x00, 0xf9, 0xb6,
  0x24, 0x0e, 0x00, 0x00
};
#endif

#ifndef USE_HTML_MIN_GZ
static const char updateIndex[] PROGMEM = R"=====(
<!DOCTYPE html><html><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width,initial-scale=0.5"><head><style>body{margin:0;height:100vh;display:flex;flex-direction:column;justify-content:center;background-color:#95b195}#dropFileForm{margin:auto 100px;text-align:center;border-radius:8px;overflow:hidden;transition:.5s}#dropFileForm #fileLabel{background-color:rgba(0,255,0,.5);display:block;padding:24px;position:relative;cursor:pointer}#dropFileForm #fileInput{display:none}#dropFileForm #fileLabel:after,#dropFileForm #fileLabel:before{position:absolute;content:"";top:0;bottom:0;left:0;right:0;background-color:#fff;z-index:-2;border-radius:8px 8px 0 0}#dropFileForm #fileLabel:before{z-index:-1;background:repeating-linear-gradient(45deg,transparent,transparent 5%,#000 5%,#000 10%);opacity:0;transition:.5s}#dropFileForm.fileHover #fileLabel:before{opacity:.25}#dropFileForm.uploadButton{border:0;outline:0;width:100%;padding:8px;font-size:50px;background-color:#32cd32;color:#fff;cursor:pointer}#dropFileForm.fileHover{box-shadow:0 0 16px #32cd32}#fileLabelText{color:#000;font-size:40px;font-family:Arial,Helvetica,sans-serif}#uploadStatus{color:rgb(112,0,0);font-size:30px;font-family:Arial,Helvetica,sans-serif}</style></head><body><form id="dropFileForm" action="/update" method="post" onsubmit="uploadFiles(event)"><input type="file" name="files[]" id="fileInput" onchange="addFiles(event)" accept=".bin"><label for="fileInput" id="fileLabel" ondragover="overrideDefault(event),fileHover()" ondragenter="overrideDefault(event),fileHover()" ondragleave="overrideDefault(event),fileHoverEnd()" ondrop="overrideDefault(event),fileHoverEnd(),addFiles(event)"><svg width="350" height="350" viewBox="0 0 2048 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1344 864q0-14-9-23l-352-352q-9-9-23-9t-23 9l-351 351q-10 12-10 24 0 14 9 23t23 9h224v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5v-352h224q13 0 22.5-9.5t9.5-22.5zm640 288q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z"/></svg><br><span id="fileLabelText">Choose firmware.bin or drag it here</span><br><span id="uploadStatus"></span></label><input type="submit" value="Update Firmware" class="uploadButton"></form><script>function overrideDefault(e){e.preventDefault(),e.stopPropagation()}function fileHover(){dropFileForm.classList.add("fileHover")}function fileHoverEnd(){dropFileForm.classList.remove("fileHover")}function addFiles(e){droppedFiles=e.target.files||e.dataTransfer.files,showFiles(droppedFiles)}function showFiles(e){"bin"!=e[0].name.split(".").pop()?(fileLabelText.innerText="STOP: Only choose .bin file !!!",alert("STOP: Only choose .bin file !!!"),fileInput.value="",dropFileForm.reset()):fileLabelText.innerText=e[0].name}function uploadFiles(e){e.preventDefault();if(fileInput.files.length==0){fileLabelText.innerText="Select at least 1 file!"}else{changeStatus("Uploading...");var t=new FormData;t.append(fileInput.name,droppedFiles[0],droppedFiles[0].name),fetch(dropFileForm.action,{method:dropFileForm.method,body:t}).then(function(e){if(e.ok){return e.text()}throw new Error('Network response was not ok.')}).then(function(html){console.log(`html=${html}`)}).catch(function(e){changeStatus("Error: "+e.message);console.log('Error: ',e.message);setTimeout(function(){location.reload()},5000)})}}function changeStatus(e){uploadStatus.innerText=e}var dropFileForm=document.getElementById("dropFileForm"),fileLabelText=document.getElementById("fileLabelText"),uploadStatus=document.getElementById("uploadStatus"),fileInput=document.getElementById("fileInput"),droppedFiles</script></body></html>
)=====";

static const char uploadIndex[] PROGMEM = R"=====(
<!DOCTYPE html><html><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width,initial-scale=0.5"><head><style>body{margin:0;height:100vh;display:flex;flex-direction:column;justify-content:center;background-color:#c2a4c0}#dropFileForm{margin:auto 100px;text-align:center;border-radius:8px;overflow:hidden;transition:.5s}#dropFileForm #fileLabel{background-color:rgba(247,0,255,.5);display:block;padding:24px;position:relative;cursor:pointer}#dropFileForm #fileInput{display:none}#dropFileForm #fileLabel:after,#dropFileForm #fileLabel:before{position:absolute;content:"";top:0;bottom:0;left:0;right:0;background-color:#fff;z-index:-2;border-radius:8px 8px 0 0}#dropFileForm #fileLabel:before{z-index:-1;background:repeating-linear-gradient(45deg,transparent,transparent 5%,#000 5%,#000 10%);opacity:0;transition:.5s}#dropFileForm.fileHover #fileLabel:before{opacity:.25}#dropFileForm .uploadButton{border:0;outline:0;width:100%;padding:8px;font-size:50px;background-color:#970183;color:#fff;cursor:pointer}#dropFileForm.fileHover{box-shadow:0 0 16px #32cd32}#fileLabelText{color:#000;font-size:40px;font-family:Arial,Helvetica,sans-serif}</style></head><body><form id="dropFileForm" action="/upload" method="post" onsubmit="uploadFiles(event)"><input type="file" name="files[]" id="fileInput" multiple onchange="addFiles(event)"><label for="fileInput" id="fileLabel" ondragover="overrideDefault(event),fileHover()" ondragenter="overrideDefault(event),fileHover()" ondragleave="overrideDefault(event),fileHoverEnd()" ondrop="overrideDefault(event),fileHoverEnd(),addFiles(event)"><svg width="300" height="300" viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1344 1344q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm256 0q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128-224v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h465l135 136q58 56 136 56t136-56l136-136h464q40 0 68 28t28 68zm-325-569q17 41-14 70l-448 448q-18 19-45 19t-45-19l-448-448q-31-29-14-70 17-39 59-39h256v-448q0-26 19-45t45-19h256q26 0 45 19t19 45v448h256q42 0 59 39z"/></svg><br><span id="fileLabelText">Choose multiple files or drag them here</span><br><span id="uploadStatus"></span></label><input type="submit" value="Upload to SPIFFs" class="uploadButton"></form><script>function overrideDefault(e){e.preventDefault(),e.stopPropagation()}function fileHover(){dropFileForm.classList.add("fileHover")}function fileHoverEnd(){dropFileForm.classList.remove("fileHover")}function addFiles(e){droppedFiles=e.target.files||e.dataTransfer.files,showFiles(droppedFiles)}function showFiles(e){noOfFiles=e.length,e.length>1?fileLabelText.innerText=e.length+" files selected":fileLabelText.innerText=e[0].name}function uploadFiles(e){if(e.preventDefault(),0==noOfFiles)fileLabelText.innerText="Select at least 1 file!";else{changeStatus("Uploading...");for(var t,o=new FormData,n=0;t=droppedFiles[n];n++)o.append(fileInput.name,t,t.name);fetch(dropFileForm.action,{method:dropFileForm.method,body:o}).then(function(e){if(e.ok)return e.text();throw new Error("Network response was not ok.")}).then(function(e){setTimeout(function(){console.log("OK: ",e),location.reload()},500)}).catch(function(e){console.log("Error: ",e.message)})}}function changeStatus(e){uploadStatus.innerText=e}var dropFileForm=document.getElementById("dropFileForm"),fileLabelText=document.getElementById("fileLabelText"),uploadStatus=document.getElementById("uploadStatus"),fileInput=document.getElementById("fileInput"),droppedFiles,noOfFiles=0</script></body></html>
)=====";
#endif

//static const char successResponse[] PROGMEM = "<META http-equiv='refresh' content='15;URL=/update'>Update Success! Rebooting...\n";

DDUpdateUploadServer::DDUpdateUploadServer(bool serial_debug, const fs::FS& fs):_fs(fs)
{
  _serial_output = serial_debug;
  _server = NULL;
  _username = emptyString;
  _password = emptyString;
  _authenticated = false;
}

void DDUpdateUploadServer::setup(ESP8266WebServer *server, const String &path, const String &username, const String &password)
{
  _server = server;
  _username = username;
  _password = password;

  if (Serial)
  {
    Serial.println("\n\n---------------------------");
    Serial.println("Starting SPIFFs...");
  }
  if (_fs.begin())
  {
    Dir dir = _fs.openDir("/");
    while (dir.next())
    {
      String fileName = dir.fileName();
      size_t fileSize = dir.fileSize();
      if (Serial)
        Serial.printf("FS File: %s, size: %dB\n", fileName.c_str(), fileSize);
    }

    FSInfo fs_info;
    _fs.info(fs_info);
    if (Serial)
    {
      Serial.printf("FS Usage: %d/%d bytes\n", fs_info.usedBytes, fs_info.totalBytes);
      Serial.println("SPIFFs started");
      Serial.println("---------------------------");
    }
  }

  // handler for the /update form page
  _server->on(path.c_str(), HTTP_GET, [&]() {
    if (_username != emptyString && _password != emptyString && !_server->authenticate(_username.c_str(), _password.c_str()))
      return _server->requestAuthentication();
#ifdef USE_HTML_MIN_GZ
    _server->sendHeader("Content-Encoding", "gzip", true);
    _server->send_P(200, PSTR("text/html"), update_min_htm_gz, update_min_htm_gz_len);
#else
    _server->send_P(200, PSTR("text/html"), updateIndex);
#endif
  });

  // handler for the /update form POST (once file upload finishes)
  _server->on(path.c_str(), HTTP_POST, [&]() {
      if(!_authenticated)
        return _server->requestAuthentication();
      if (Update.hasError()) {
        _server->send(200, F("text/plain"), String(F("Update error: ")) + _updaterError);
      } else {
        _server->client().setNoDelay(true);
        _server->send(200, PSTR("text/plain"), String(F("Update OK")));
        delay(100);
        _server->client().stop();
        ESP.restart();
      } }, [&]() {
      // handler for the file upload, get's the sketch bytes, and writes
      // them through the Update object
      HTTPUpload& upload = _server->upload();

      if(upload.status == UPLOAD_FILE_START){
        _updaterError = String();
        if (_serial_output)
          Serial.setDebugOutput(true);

        _authenticated = (_username == emptyString || _password == emptyString || _server->authenticate(_username.c_str(), _password.c_str()));
        if(!_authenticated){
          if (_serial_output)
            Serial.printf("Unauthenticated Update\n");
          return;
        }

        WiFiUDP::stopAll();
        if (_serial_output)
          Serial.printf("Update: %s\n", upload.filename.c_str());
        uint32_t maxSketchSpace = (ESP.getFreeSketchSpace() - 0x1000) & 0xFFFFF000;
        if(!Update.begin(maxSketchSpace)){//start with max available size
          _setUpdaterError();
        }
      } else if(_authenticated && upload.status == UPLOAD_FILE_WRITE && !_updaterError.length()){
        if (_serial_output) Serial.printf(".");
        if(Update.write(upload.buf, upload.currentSize) != upload.currentSize){
          _setUpdaterError();
        }
      } else if(_authenticated && upload.status == UPLOAD_FILE_END && !_updaterError.length()){
        if(Update.end(true)){ //true to set the size to the current progress
          if (_serial_output) Serial.printf("\nUpdate Success: %u\nRebooting...\n", upload.totalSize);
        } else {
          _setUpdaterError();
        }
        if (_serial_output) Serial.setDebugOutput(false);
      } else if(_authenticated && upload.status == UPLOAD_FILE_ABORTED){
        Update.end();
        if (_serial_output) Serial.println("Update was aborted");
      }
      delay(0); });

  // handler for the /upload form page
  _server->on("/upload", HTTP_GET, [&]() {
    if (_username != emptyString && _password != emptyString && !_server->authenticate(_username.c_str(), _password.c_str()))
      return _server->requestAuthentication();
#ifdef USE_HTML_MIN_GZ
    _server->sendHeader("Content-Encoding", "gzip", true);
    _server->send_P(200, PSTR("text/html"), upload_min_htm_gz, upload_min_htm_gz_len);
#else
    _server->send_P(200, PSTR("text/html"), uploadIndex);
#endif
  });

  _server->on("/upload", HTTP_POST, [&]() { _server->send(200, "text/plain", "Upload success!"); }, [&]() {
      if (_server->uri() != "/upload") {
        return;
      }
      HTTPUpload& upload = _server->upload();
      if (upload.status == UPLOAD_FILE_START) {
        String filename = upload.filename;
        if (!filename.startsWith("/")) {
          filename = "/" + filename;
        }
        if (_serial_output) { Serial.print("handleFileUpload Name: "); Serial.println(filename); }
        fsUploadFile = _fs.open(filename, "w");
        filename = String();
      } else if (upload.status == UPLOAD_FILE_WRITE) {
        //if (_serial_output)  { Serial.print("handleFileUpload Data: "); Serial.println(upload.currentSize); }
        if (fsUploadFile) {
          fsUploadFile.write(upload.buf, upload.currentSize);
        }
      } else if (upload.status == UPLOAD_FILE_END) {
        if (fsUploadFile) {
          fsUploadFile.close();
        }
        if (_serial_output) { Serial.print("handleFileUpload Size: "); Serial.println(upload.totalSize); }
      }      
      });
}

void DDUpdateUploadServer::_setUpdaterError()
{
  if (_serial_output)
    Update.printError(Serial);
  StreamString str;
  Update.printError(str);
  _updaterError = str.c_str();
}
